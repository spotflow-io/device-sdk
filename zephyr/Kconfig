menuconfig SPOTFLOW
	bool "Enable Spotflow Observability"
	default n
	select HWINFO
# 	used by both Coredumps and Logging
	select ZCBOR
	select MBEDTLS
	select MBEDTLS_TLS_LIBRARY if NRF_SECURITY
	select MQTT_LIB
	select MQTT_LIB_TLS
	select MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED if !NRF_SECURITY
	select MBEDTLS_ECP_DP_SECP256R1_ENABLED
	select MBEDTLS_ECDH_C
	select MBEDTLS_ECP_C
	select MBEDTLS_RSA_C if NRF_SECURITY
	select MBEDTLS_DHM_C if NRF_SECURITY
	select MBEDTLS_GCM_C if NRF_SECURITY
	select NET_SOCKETS
	select NET_SOCKETS_POLL
	select NET_TCP
	select DNS_RESOLVER
	imply NET_SOCKETS_SOCKOPT_TLS
	help
		Enables Zephyr integration with Spotflow observability platform.

if SPOTFLOW

rsource "src/logging/KConfig"
rsource "src/coredumps/KConfig"

config SPOTFLOW_GENERATE_BUILD_ID
	bool "Generate build ID"
	default y
	select BINDESC
	select BINDESC_DEFINE
	help
		Generate build ID and embed it as a binary descriptor.
		Build ID allows to match core dumps with the original .elf file.

configdefault MBEDTLS_SSL_MAX_CONTENT_LEN
	default 4096 if SPOTFLOW

if NRF_SECURITY
configdefault MBEDTLS_MPI_MAX_SIZE
	int
	default 512 if SPOTFLOW
endif #NRF_SECURITY

configdefault MAIN_STACK_SIZE
	default 4096 if SPOTFLOW

configdefault ZVFS_OPEN_MAX
	default 32 if SPOTFLOW

# generally better to use separate heap for mbedtls so
# there is a dedicated heap for TLS operations without fragmentation
configdefault MBEDTLS_ENABLE_HEAP
	default y if SPOTFLOW

if MBEDTLS_ENABLE_HEAP
# recommended size for mbedtls heap is 32kB
# to be able to verify whole Lets Encrypt certificate chain
configdefault MBEDTLS_HEAP_SIZE
	default 32768
endif # MBEDTLS_ENABLE_HEAP

config SPOTFLOW_SERVER_HOSTNAME
	string "Hostname of Spotflow observability platform"
	depends on SPOTFLOW
	default "mqtt.spotflow.io"

config SPOTFLOW_SERVER_PORT
	int "Port of Spotflow observability platform"
	depends on SPOTFLOW
	default 8883

config SPOTFLOW_DEVICE_ID
	string "Device ID device will use to connect to Spotflow observability platform"
	help
		Device ID is a unique identifier for your device in Spotflow observability
		platform. If empty, the hexadecimal representation of the result of
		hwinfo_get_device_id(...) will be used. You can provide the device ID
		in the code by defining the function char* spotflow_override_device_id().

config SPOTFLOW_INGEST_KEY
	string "Password device will use to connect to Spotflow observability platform"
	help
		Ingest key is a secret key used to authenticate your device
		It can be found in Spotflow observability platform


config SPOTFLOW_MQTT_THREAD_CUSTOM_PRIORITY
	bool "Use custom priority for MQTT log thread"
	default n
	help
		Enable this option to use custom priority for the thread used to send logs to Spotflow server.
		Same priority is also used for thread preparing coredumps.
		If disabled, the thread will use default K_LOWEST_APPLICATION_THREAD_PRIO.

config SPOTFLOW_MQTT_THREAD_PRIORITY
	int "MQTT log thread priority"
	default 14
	depends on SPOTFLOW_MQTT_THREAD_CUSTOM_PRIORITY
	help
		Priority of the thread used to send logs to Spotflow server.
		To take effect, you need to enable SPOTFLOW_MQTT_THREAD_CUSTOM_PRIORITY.
		Increase this value if you experience issues with logs being sent.

config SPOTFLOW_PROCESSING_THREAD_STACK_SIZE
	int "Size of Spotflow processing thread stack"
	default 2560
	help
		Size of the stack used by the Spotflow processing thread.
		Increase this value if you experience issues with logs/tls handshake.

endif #SPOTFLOW
