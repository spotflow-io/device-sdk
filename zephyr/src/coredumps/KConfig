config SPOTFLOW_COREDUMPS
	bool "Enable core dumps upload to Spotflow"
	default n
	select DEBUG_COREDUMP
	select FLASH
	select REBOOT
	help
		Enable sending core dumps to Spotflow observability platform.


if SPOTFLOW_COREDUMPS

# spotflow uses Zephyr's coredump subsystem to upload core dumps
choice DEBUG_COREDUMP_BACKEND
	default DEBUG_COREDUMP_BACKEND_FLASH_PARTITION if SPOTFLOW_COREDUMPS
endchoice

config SPOTFLOW_COREDUMPS_PROCESSING_LOG_LEVEL
	int "Spotflow SDK coredumps component log level"
	default SPOTFLOW_MODULE_DEFAULT_LOG_LEVEL
	range 0 4
	help
		Sets log level for Spotflow coredumps component.
		Defaults to SPOTFLOW_MODULE_DEFAULT_LOG_LEVEL.
		Levels are:
		- 0 OFF, do not write
		- 1 ERROR, only write LOG_ERR
		- 2 WARNING, write LOG_WRN in addition to previous level
		- 3 INFO, write LOG_INF in addition to previous level
		- 4 DEBUG, write LOG_DBG in addition to previous level

config SPOTFLOW_COREDUMPS_CHUNK_SIZE
	int "Size of Spotflow coredump chunk"
	default 1024
	range 128 921600
	help
		Size of the coredump chunk used by Spotflow Coredump backend.
		Should not be larger than 900 KiB because Spotflow cloud backend
		expects coredump chunks to be less than 1 MiB including metadata.

config SPOTFLOW_COREDUMPS_BACKEND_QUEUE_SIZE
	int "Size of Spotflow coredump backend queue"
	default 16
	help
		Size of the queue used by Spotflow Coredump backend to store coredump
		chunks before sending them to the server.

config SPOTFLOW_USE_DEFAULT_REBOOT_HANDLER
    bool "Use default Spotflow reboot handler"
    default y
    help
        Use the default Zephyr reboot handler to reset the system after a fatal error.
        If disabled, you will need to implement your own reboot handler.
        Please, make sure you reboot the device and call LOG_PANIC() in your handler.
endif #SPOTFLOW_COREDUMPS
